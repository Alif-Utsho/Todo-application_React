{"version":3,"sources":["components/search.jsx","components/toolBar/filter-button.jsx","components/toolBar/radio.jsx","components/toolBar/reset.jsx","components/tool.jsx","components/listDesign/listItem.jsx","components/list.jsx","components/tableDesign/tableItem.jsx","components/table.jsx","components/modal.jsx","components/todo.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["Search","searchHandler","class","type","placeholder","onChange","e","target","value","data-bs-toggle","data-bs-target","Filter","todos","filterHandler","className","role","aria-label","id","onClick","length","Radio","listView","listViewHandler","name","checked","for","Reset","resetHandler","clearCompleted","clearSelected","Tool","ListItem","todo","completeHandler","checkHandler","isSelected","tittle","time","toDateString","isCompleted","List","map","TableItem","Table","scope","Modal","state","description","handleChange","event","setState","handleSubmit","preventDefault","props","createTodo","alert","tabindex","aria-labelledby","data-bs-dismiss","onSubmit","this","React","Component","Todo","searchTerm","filter","todoId","find","t","shortid","generate","Date","performSearch","toLowerCase","includes","performFilter","getView","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.44487505.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Search = ({ searchHandler }) => {\r\n  return (\r\n    <div class=\"input-group mb-3\">\r\n      <input\r\n        type=\"text\"\r\n        class=\"form-control\"\r\n        placeholder=\"Enter search items\"\r\n        onChange={e => searchHandler(e.target.value)}\r\n      />\r\n      <div>\r\n        <button\r\n          type=\"button\"\r\n          data-bs-toggle=\"modal\"\r\n          data-bs-target=\"#exampleModal\"\r\n          class=\"btn btn-warning ms-1\"\r\n        >\r\n          New\r\n          </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Search","import React from 'react'\r\n\r\nconst Filter = ({todos, filterHandler}) => {\r\n    return (\r\n      <div>\r\n        <div>\r\n          <div\r\n            className=\"btn-group\"\r\n            role=\"group\"\r\n            aria-label=\"Basic mixed styles example\"\r\n          >\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-secondary\"\r\n              id=\"show-all-btn\"\r\n              onClick={() => filterHandler('all')}\r\n            >\r\n              All <span class=\"badge bg-primary rounded-pill ms-1\">{todos.length}</span>\r\n            </button>\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-secondary\"\r\n              id=\"show-running-btn\"\r\n              onClick={()=>filterHandler('running')}\r\n            >\r\n              Running\r\n            </button>\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-secondary\"\r\n              id=\"show-completed-btn\"\r\n              onClick={()=>filterHandler('completed')}\r\n            >\r\n              Completed\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default Filter","import React from 'react'\r\n\r\nconst Radio = ({ listView, listViewHandler }) => (\r\n  <div className='ms-auto'>\r\n    <div class=\"form-check form-check-inline\">\r\n      <input\r\n        class=\"form-check-input\"\r\n        type=\"radio\"\r\n        name=\"flexRadioDefault\"\r\n        id=\"flexRadioDefault1\"\r\n        checked={listView}\r\n        onChange={()=>listViewHandler()}\r\n      />\r\n      <label class=\"form-check-label\" for=\"flexRadioDefault1\">\r\n        List View\r\n      </label>\r\n    </div>\r\n    <div class=\"form-check form-check-inline\">\r\n      <input\r\n        class=\"form-check-input\"\r\n        type=\"radio\"\r\n        name=\"flexRadioDefault\"\r\n        id=\"flexRadioDefault2\"\r\n        checked={!listView}\r\n        onChange={()=>listViewHandler()}\r\n      />\r\n      <label class=\"form-check-label\" for=\"flexRadioDefault2\">\r\n        Table View\r\n      </label>\r\n    </div>\r\n  </div>\r\n)\r\n\r\nexport default Radio","import React from 'react'\r\n\r\nconst Reset = ({resetHandler, clearCompleted, clearSelected, filterHandler}) => {\r\n    return (\r\n      <div className=\"ms-auto\">\r\n        <div>\r\n          <div\r\n            className=\"btn-group\"\r\n            role=\"group\"\r\n            aria-label=\"Basic mixed styles example\"\r\n          >\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-danger\"\r\n              id=\"show-all-btn\"\r\n              onClick={clearSelected}\r\n            >\r\n              Clear Selected\r\n            </button>\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-danger\"\r\n              id=\"show-running-btn\"\r\n              onClick={()=>clearCompleted()}\r\n            >\r\n              Clear Completed\r\n            </button>\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-danger\"\r\n              id=\"show-completed-btn\"\r\n              onClick={()=>resetHandler()}\r\n            >\r\n              Clear All\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default Reset","import React from 'react'\r\n\r\nimport Filter from './toolBar/filter-button'\r\nimport Radio from './toolBar/radio'\r\nimport Reset from './toolBar/reset'\r\n\r\nconst Tool = ({ todos, listView, listViewHandler, resetHandler, clearCompleted, clearSelected, filterHandler }) => {\r\n  return (\r\n    <div className='d-flex'>\r\n      <Filter\r\n        todos={todos}\r\n        filterHandler={filterHandler}\r\n      />\r\n      <Radio\r\n        listView={listView}\r\n        listViewHandler={listViewHandler}\r\n      />\r\n      <Reset\r\n        resetHandler={resetHandler}\r\n        clearCompleted={clearCompleted}\r\n        clearSelected={clearSelected}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Tool","import React from \"react\";\r\n\r\nconst ListItem = ({ todo, completeHandler, checkHandler }) => {\r\n    return (\r\n        <li className=\"list-group-item\">\r\n            <div className=\"d-flex\">\r\n                <div className=\"me-5 my-auto\">\r\n                    <input\r\n                        type=\"checkbox\"\r\n                        id={todo.id}\r\n                        checked={ todo.isSelected }\r\n                        onChange={()=>checkHandler(todo.id)}\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <div>\r\n                        <h6>{todo.tittle}</h6>\r\n                        <p>{todo.time.toDateString()}</p>\r\n                    </div>\r\n                </div>\r\n                <div className=\"ms-auto my-auto\">\r\n                    <button\r\n                        className= {todo.isCompleted ? 'btn btn-danger' : 'btn btn-success'}\r\n                        onClick={()=>completeHandler(todo.id)}\r\n                    >\r\n                        {todo.isCompleted ? 'Completed' : 'Running'}\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </li>\r\n    );\r\n};\r\n\r\nexport default ListItem;\r\n","import React from \"react\";\r\n\r\nimport ListItem from \"./listDesign/listItem\";\r\n\r\nconst List = ({ todos, completeHandler, checkHandler }) => {\r\n  return (\r\n    <div className=\"mt-4\">\r\n      <ul class=\"list-group\">\r\n        {todos.map(todo => {\r\n          return (\r\n            <ListItem\r\n              todo={todo}\r\n              completeHandler={completeHandler}\r\n              checkHandler={checkHandler}\r\n            />\r\n          );\r\n        })}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default List;\r\n","import React from \"react\";\r\n\r\nconst TableItem = ({ todo, completeHandler, checkHandler }) => {\r\n    return (\r\n        <tr>\r\n            <th className='my-auto'>\r\n                <input\r\n                    type=\"checkbox\"\r\n                    id={todo.id}\r\n                    checked={todo.isSelected}\r\n                    onChange={() => checkHandler(todo.id)}\r\n                />\r\n            </th>\r\n            <td>{todo.time.toDateString()}</td>\r\n            <td>{todo.tittle}</td>\r\n            <td>\r\n                <button\r\n                    className={todo.isCompleted ? 'btn btn-danger' : 'btn btn-success'}\r\n                    onClick={() => completeHandler(todo.id)}\r\n                >\r\n                    {todo.isCompleted ? 'Completed' : 'Running'}\r\n                </button>\r\n\r\n            </td>\r\n        </tr>\r\n    );\r\n}\r\n\r\nexport default TableItem\r\n","import React from 'react'\r\n\r\nimport TableItem from './tableDesign/tableItem'\r\n\r\nconst Table = ({ todos, completeHandler, checkHandler }) => {\r\n  return (\r\n    <div className=\"mt-4\">\r\n      <table class=\"table\">\r\n        <thead>\r\n          <tr>\r\n            <th scope=\"col\">#</th>\r\n            <th scope=\"col\">Time</th>\r\n            <th scope=\"col\">Todo</th>\r\n            <th scope=\"col\">Action</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {todos.map(todo => {\r\n            return <TableItem\r\n              todo={todo}\r\n              completeHandler={completeHandler}\r\n              checkHandler={checkHandler}\r\n            />\r\n          })}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Table","import React from 'react'\r\n\r\nclass Modal extends React.Component{\r\n\r\n    state= {\r\n        tittle: '',\r\n        description: ''\r\n    }\r\n\r\n    handleChange = event => {\r\n        this.setState({\r\n            [event.target.name] : event.target.value\r\n        })\r\n    }\r\n\r\n    handleSubmit = event => {\r\n        if (this.state.tittle) {\r\n            event.preventDefault();\r\n            this.props.createTodo(this.state);\r\n            this.setState({ tittle: '', description: '' });\r\n        }\r\n        else {\r\n            alert('Enter a tittle')\r\n        }\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div class=\"modal fade\" id=\"exampleModal\" tabindex=\"-1\" aria-labelledby=\"exampleModalLabel\">\r\n                    <div class=\"modal-dialog\">\r\n                        <div class=\"modal-content\">\r\n                            <div class=\"modal-header\">\r\n                                <h5 class=\"modal-title\" id=\"exampleModalLabel\">Create a new Todo item</h5>\r\n                                <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\r\n                            </div>\r\n                            <div class=\"modal-body\">\r\n                                <form onSubmit='handleSubmit'>\r\n                                    <div class=\"mb-3\">\r\n                                        <label class=\"col-form-label\">Tittle</label>\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            class=\"form-control\"\r\n                                            name=\"tittle\"\r\n                                            value={this.state.tittle}\r\n                                            onChange={this.handleChange}\r\n                                        />\r\n                                    </div>\r\n                                    <div class=\"mb-3\">\r\n                                        <label class=\"col-form-label\">Description</label>\r\n                                        <textarea\r\n                                            class=\"form-control\"\r\n                                            name=\"description\"\r\n                                            value={this.state.description}\r\n                                            onChange={this.handleChange}\r\n                                        >\r\n                                        </textarea>\r\n                                    </div>\r\n                                </form>\r\n                                <div class=\"modal-footer\">\r\n                                    <button type=\"button\" class=\"btn btn-secondary\" data-bs-dismiss=\"modal\">Close</button>\r\n                                    <button type=\"button\" class=\"btn btn-primary\" data-bs-dismiss=\"modal\" onClick={this.handleSubmit}>Submit</button>\r\n                                </div>\r\n                            </div>\r\n                            \r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Modal","import React from \"react\";\r\nimport shortid from 'shortid'\r\n\r\nimport Search from \"./search\";\r\nimport Tool from \"./tool\";\r\nimport List from \"./list\";\r\nimport Table from \"./table\";\r\nimport Modal from \"./modal\"\r\n\r\nclass Todo extends React.Component {\r\n    state = {\r\n        todos: [\r\n            \r\n        ],\r\n        listView: true,\r\n        searchTerm: '',\r\n        filter: 'all'\r\n    };\r\n\r\n    completeHandler = (todoId) => {\r\n        const todos = [...this.state.todos];\r\n        const todo = todos.find((t) => todoId === t.id);\r\n        todo.isCompleted = !todo.isCompleted;\r\n        this.setState({ todos });\r\n    };\r\n\r\n    checkHandler = (todoId) => {\r\n        const todos = [...this.state.todos];\r\n        const todo = todos.find((t) => t.id === todoId);\r\n        todo.isSelected = !todo.isSelected;\r\n        this.setState({ todos });\r\n    };\r\n\r\n    listViewHandler = () => {\r\n        this.setState({\r\n            listView: !this.state.listView\r\n        })\r\n    }\r\n\r\n    createTodo = (todo) => {\r\n        todo.id = shortid.generate()\r\n        todo.time = new Date()\r\n        todo.isCompleted = false\r\n        todo.isSelected = false\r\n\r\n        const todos = [todo, ...this.state.todos]\r\n        this.setState({ todos })\r\n    }\r\n\r\n    resetHandler = () => {\r\n        const todos = this.state.todos.filter(() => null)\r\n        this.setState({ todos })\r\n    }\r\n\r\n    clearCompleted = () => {\r\n        const todos = this.state.todos.filter(todo => !todo.isCompleted)\r\n        this.setState({ todos })\r\n    }\r\n\r\n    clearSelected = () => {\r\n        const todos = this.state.todos.filter(todo => !todo.isSelected)\r\n        this.setState({ todos })\r\n    }\r\n\r\n    performSearch = () => {\r\n        return this.state.todos.filter(todo =>\r\n            todo.tittle\r\n                .toLowerCase()\r\n                .includes(this.state.searchTerm.toLowerCase())\r\n        )\r\n    }\r\n\r\n    filterHandler = filter => {\r\n        this.setState({ filter })\r\n    }\r\n\r\n    performFilter = todos => {\r\n        const { filter } = this.state\r\n        if (filter === 'completed') {\r\n            return todos.filter(todo => todo.isCompleted)\r\n        }\r\n        else if (filter === 'running') {\r\n            return todos.filter(todo => !todo.isCompleted)\r\n        }\r\n        else {\r\n            return todos\r\n        }\r\n    }\r\n\r\n    searchHandler = searchTerm => {\r\n        this.setState({ searchTerm })\r\n    }\r\n\r\n    getView = () => {\r\n        const todo = this.performSearch()\r\n        const todos = this.performFilter(todo)\r\n\r\n        return this.state.listView ?\r\n            (\r\n                <List\r\n                    todos={todos}\r\n                    completeHandler={this.completeHandler}\r\n                    checkHandler={this.checkHandler}\r\n                />\r\n            ) : (\r\n                <Table\r\n                    todos={todos}\r\n                    completeHandler={this.completeHandler}\r\n                    checkHandler={this.checkHandler}\r\n                />\r\n            )\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"row justify-content-center mt-5\">\r\n                <div className=\"col-9\">\r\n                    <div>\r\n                        <Search searchHandler={this.searchHandler} />\r\n                        <Tool\r\n                            todos={this.state.todos}\r\n                            listView={this.state.listView}\r\n                            listViewHandler={this.listViewHandler}\r\n                            resetHandler={this.resetHandler}\r\n                            clearCompleted={this.clearCompleted}\r\n                            clearSelected={this.clearSelected}\r\n                            filterHandler={this.filterHandler}\r\n                        />\r\n                        <div>{this.getView()}</div>\r\n\r\n                    </div>\r\n                    <Modal createTodo={this.createTodo} />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Todo;\r\n","import React from 'react'\r\nimport './App.css';\r\n\r\nimport Todo from './components/todo'\r\n\r\nconst App = () => {\r\n    return (\r\n        <div className=\"container mt-4\">\r\n            <h1 className=\"text-center\">Todo Application</h1>\r\n            <Todo/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}